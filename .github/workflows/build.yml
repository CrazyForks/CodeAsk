name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg rpm fakeroot

      - name: Clean install artifacts
        run: |
          rm -rf node_modules || true

      - name: Install dependencies
        run: |
          npm install --no-package-lock --legacy-peer-deps
          npm install @rollup/rollup-${{ runner.os == 'macOS' && 'darwin' || 'linux' }}-${{ runner.arch }} --legacy-peer-deps --no-save --no-package-lock || true

      - name: Build and Make
        run: |
          npm run make --legacy-peer-deps

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            out/make/**/*.dmg
            out/make/**/*.deb
            out/make/**/*.rpm
            out/make/**/*.zip

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *-artifacts/**/*.dmg
            *-artifacts/**/*.deb
            *-artifacts/**/*.rpm
            *-artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 