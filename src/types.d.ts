// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

import type { FileNode } from "@/components/codeview/side/FileTree";

// Preload types
interface ThemeModeContext {
  toggle: () => Promise<boolean>;
  dark: () => Promise<void>;
  light: () => Promise<void>;
  system: () => Promise<boolean>;
  current: () => Promise<"dark" | "light" | "system">;
}

interface ElectronWindow {
  minimize: () => Promise<void>;
  maximize: () => Promise<void>;
  close: () => Promise<void>;
}

interface FolderAPI {
  readFolder: (folderPath: string) => Promise<FileNode[]>;
  selectFolder: () => Promise<string>;
}

interface FileAPI {
  readTextFile: (filePath: string) => Promise<string>;
  writeTextFile: (filePath: string, content: string) => Promise<void>;
}

declare interface Window {
  themeMode: ThemeModeContext;
  electronWindow: ElectronWindow;
  folderAPI: FolderAPI;
  fileAPI: FileAPI;
  storeAPI: {
    get: (storeName: string, key: string) => Promise<any>;
    set: (storeName: string, key: string, value: any) => Promise<void>;
    delete: (storeName: string, key: string) => Promise<void>;
  };
}
