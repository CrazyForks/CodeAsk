{
  "zh": {
    "产品需求文档（PRD）": {
      "name": "产品需求文档（PRD）",
      "singlePageAnalysis": {
        "prompt": "请分析此代码文件，提供以下要点：\n1. 核心功能和目的（一句话描述）\n2. 主要功能模块\n3. 输入输出及交互方式（简述）\n4. 关键技术依赖\n请保持简洁，总字数不超过100字。"
      },
      "summaryAnalysis": {
        "prompt": "基于各文件的功能概要，撰写产品需求文档（PRD）：\n\n1. **产品概述**\n   - 背景与价值\n   - 目标用户\n   - 核心价值\n   - 市场定位\n\n2. **功能规格**\n   - 核心功能模块\n   - 功能架构图（Mermaid）\n   - 详细功能描述\n   - 功能优先级矩阵\n\n3. **用户场景**\n   - 用户画像\n   - 用户旅程地图\n   - 关键场景用例\n\n4. **技术架构**\n   - 系统架构图（Mermaid）\n   - 业务流程图\n   - 技术栈\n   - 外部依赖\n\n5. **接口规范**\n   - 集成方案\n   - 数据流转\n   - 关键接口定义\n\n请确保内容详细、结构清晰，并使用Mermaid图表增强可读性。"
      }
    },
    "技术债务评估报告": {
      "name": "技术债务评估报告",
      "singlePageAnalysis": {
        "prompt": "请分析此代码文件的技术债务：\n1. 代码质量（重复代码、复杂度）\n2. 性能问题（潜在瓶颈）\n3. 文档情况（是否完整）\n4. 最佳实践（是否遵循）\n请简述，总字数不超过50字。"
      },
      "summaryAnalysis": {
        "prompt": "基于代码分析结果，生成技术债务评估报告：\n\n1. **技术债务概览**\n   - 债务分类统计（饼图）\n   - 严重程度分布（柱状图）\n   - 影响范围评估\n   - 技术债务热力图\n\n2. **详细分析**\n   - 代码质量指标（复杂度、重复率等）\n   - 性能瓶颈分析\n   - 架构隐患评估\n   - 安全风险排查\n\n3. **优先级评估**\n   - 评估矩阵（紧急 vs 重要）\n   - ROI分析\n   - 修复成本估算\n   - 风险影响评级\n\n4. **改进方案**\n   - 短期优化建议\n   - 长期重构计划\n   - 实施步骤\n   - 收益预期\n\n5. **监控指标**\n   - 关键指标定义\n   - 监控方案\n   - 告警阈值\n   - 评估周期\n\n请使用Mermaid图表增强可读性和数据支持分析，确保报告实用且可操作。"
      }
    },
    "安全评估报告": {
      "name": "安全评估报告",
      "singlePageAnalysis": {
        "prompt": "请分析此代码文件的安全隐患：\n1. 常见漏洞（SQL注入、XSS等）\n2. 数据安全（敏感数据处理）\n3. 权限控制（访问控制问题）\n如无明显问题，回答‘未发现明显安全隐患’。总字数不超过50字。"
      },
      "summaryAnalysis": {
        "prompt": "基于安全分析结果，生成安全评估报告：\n\n1. **安全风险概览**\n   - 风险等级分布（高、中、低）\n   - 漏洞类型统计（柱状图）\n   - OWASP Top 10对照\n   - 整体安全评分\n\n2. **漏洞详情**\n   - 漏洞描述\n   - 影响范围\n   - 利用难度\n   - 危害程度\n\n3. **风险评估**\n   - CVSS评分\n   - 攻击向量分析\n   - 威胁模型\n   - 风险暴露面\n\n4. **修复方案**\n   - 应急修复建议\n   - 长期防护策略\n   - 最佳实践指南\n   - 安全加固方案\n\n5. **安全治理**\n   - 安全开发流程\n   - 代码审查要点\n   - 持续监控方案\n   - 应急响应预案\n\n请确保报告内容详实，提供具体的安全建议和措施。"
      }
    },
    "API文档": {
      "name": "API文档",
      "singlePageAnalysis": {
        "prompt": "请分析此代码文件，提取API接口信息：\n1. 接口路径和方法（GET/POST等）\n2. 功能简述\n3. 请求参数（名称、类型、是否必需）\n4. 响应格式（字段名称、类型）\n5. 错误码及含义\n如无API，直接回答‘未发现API接口’。"
      },
      "summaryAnalysis": {
        "prompt": "基于提取的API接口信息，生成API文档：\n\n1. **API接口列表**\n   - 路径\n   - 方法（GET/POST等）\n   - 功能描述\n   - 请求参数（表格：名称、类型、是否必需、默认值）\n   - 响应数据格式（表格：字段名称、类型、说明）\n\n2. **请求示例**\n   - 为每个API提供curl命令或HTTP请求示例\n\n3. **响应示例**\n   - 为每个API提供JSON响应示例\n\n4. **错误处理**\n   - 错误码列表（表格：错误码、含义、应对方式）\n\n请确保文档结构清晰，易于开发人员理解和使用。"
      }
    },
    "用户行为分析报告": {
      "name": "用户行为分析报告",
      "singlePageAnalysis": {
        "prompt": "请分析此代码文件，关注用户行为：\n1. 功能简述\n2. 用户操作路径（简述）\n3. 潜在痛点（1-2个）\n4. 优化建议（简要）\n请保持简洁，总字数不超过100字。"
      },
      "summaryAnalysis": {
        "prompt": "基于用户行为分析信息，生成用户行为分析报告：\n\n1. **用户行为流程**\n   - 展示用户在系统中的行为路径（流程图）\n   - 关键功能使用路径\n\n2. **用户痛点分析**\n   - 分析功能复杂性\n   - 交互不友好之处\n   - 用户反馈（如果有）\n\n3. **优化建议**\n   - 功能优化建议\n   - 流程改进建议\n   - 用户体验提升措施\n\n请使用Mermaid图表和具体示例支持分析，确保报告具有实用性。"
      }
    }
  },
  "en": {
    "Product Requirements Document (PRD)": {
      "name": "Product Requirements Document (PRD)",
      "singlePageAnalysis": {
        "prompt": "Please analyze this code file and provide: \n1. Core function and purpose (one sentence) \n2. Main functional modules \n3. Input/output and interaction (brief) \n4. Key technical dependencies \nKeep it concise, under 100 words."
      },
      "summaryAnalysis": {
        "prompt": "Based on the functional summaries of each file, create a Product Requirements Document (PRD): \n\n1. **Product Overview** \n   - Background and value \n   - Target users \n   - Core value \n   - Market positioning \n\n2. **Functional Specifications** \n   - Core functional modules \n   - Functional architecture diagram (Mermaid) \n   - Detailed function descriptions \n   - Function priority matrix \n\n3. **User Scenarios** \n   - User personas \n   - User journey map \n   - Key scenario use cases \n\n4. **Technical Architecture** \n   - System architecture diagram (Mermaid) \n   - Business process diagram \n   - Tech stack \n   - External dependencies \n\n5. **Interface Specifications** \n   - Integration plan \n   - Data flow \n   - Key interface definitions \n\nEnsure detailed content, clear structure, and use Mermaid diagrams for readability."
      }
    },
    "Technical Debt Assessment Report": {
      "name": "Technical Debt Assessment Report",
      "singlePageAnalysis": {
        "prompt": "Analyze the technical debt of this code file: \n1. Code quality (duplication, complexity) \n2. Performance issues (potential bottlenecks) \n3. Documentation status (completeness) \n4. Best practices (adherence) \nKeep it brief, under 50 words."
      },
      "summaryAnalysis": {
        "prompt": "Based on code analysis, generate a Technical Debt Assessment Report: \n\n1. **Technical Debt Overview** \n   - Debt category stats (pie chart) \n   - Severity distribution (bar chart) \n   - Impact scope assessment \n   - Technical debt heatmap \n\n2. **Detailed Analysis** \n   - Code quality metrics (complexity, duplication rate) \n   - Performance bottleneck analysis \n   - Architecture risk assessment \n   - Security risk review \n\n3. **Priority Assessment** \n   - Assessment matrix (urgent vs. important) \n   - ROI analysis \n   - Repair cost estimation \n   - Risk impact rating \n\n4. **Improvement Plan** \n   - Short-term optimization suggestions \n   - Long-term refactoring plan \n   - Implementation steps \n   - Expected benefits \n\n5. **Monitoring Metrics** \n   - Key metric definitions \n   - Monitoring plan \n   - Alert thresholds \n   - Evaluation cycle \n\nUse Mermaid diagrams to enhance readability and data-driven analysis, ensuring a practical and actionable report."
      }
    },
    "Security Assessment Report": {
      "name": "Security Assessment Report",
      "singlePageAnalysis": {
        "prompt": "Analyze security risks in this code file: \n1. Common vulnerabilities (SQL injection, XSS, etc.) \n2. Data security (sensitive data handling) \n3. Access control (permission issues) \nIf no obvious issues, state ‘No significant security risks found.’ Under 50 words."
      },
      "summaryAnalysis": {
        "prompt": "Based on security analysis, generate a Security Assessment Report: \n\n1. **Security Risk Overview** \n   - Risk level distribution (high, medium, low) \n   - Vulnerability type stats (bar chart) \n   - OWASP Top 10 comparison \n   - Overall security score \n\n2. **Vulnerability Details** \n   - Vulnerability descriptions \n   - Impact scope \n   - Exploit difficulty \n   - Severity level \n\n3. **Risk Assessment** \n   - CVSS scoring \n   - Attack vector analysis \n   - Threat model \n   - Risk exposure \n\n4. **Mitigation Plan** \n   - Emergency fix suggestions \n   - Long-term protection strategies \n   - Best practice guidelines \n   - Security hardening plan \n\n5. **Security Governance** \n   - Secure development process \n   - Code review checklist \n   - Continuous monitoring plan \n   - Incident response plan \n\nEnsure detailed content with specific security recommendations and measures."
      }
    },
    "API Documentation": {
      "name": "API Documentation",
      "singlePageAnalysis": {
        "prompt": "Analyze this code file to extract API details: \n1. Endpoint path and method (GET/POST, etc.) \n2. Function overview \n3. Request parameters (name, type, required) \n4. Response format (field name, type) \n5. Error codes and meanings \nIf no API, state ‘No API endpoints found.’"
      },
      "summaryAnalysis": {
        "prompt": "Based on extracted API details, generate API Documentation: \n\n1. **API Endpoint List** \n   - Path \n   - Method (GET/POST, etc.) \n   - Function description \n   - Request parameters (table: name, type, required, default) \n   - Response data format (table: field name, type, description) \n\n2. **Request Examples** \n   - Provide curl commands or HTTP request samples for each API \n\n3. **Response Examples** \n   - Provide JSON response samples for each API \n\n4. **Error Handling** \n   - Error code list (table: code, meaning, resolution) \n\nEnsure a clear, developer-friendly structure."
      }
    },
    "User Behavior Analysis Report": {
      "name": "User Behavior Analysis Report",
      "singlePageAnalysis": {
        "prompt": "Analyze this code file for user behavior: \n1. Function overview \n2. User operation path (brief) \n3. Potential pain points (1-2) \n4. Optimization suggestions (brief) \nKeep it concise, under 100 words."
      },
      "summaryAnalysis": {
        "prompt": "Based on user behavior analysis, generate a User Behavior Analysis Report: \n\n1. **User Behavior Flow** \n   - Display user behavior paths in the system (flowchart) \n   - Key function usage paths \n\n2. **User Pain Point Analysis** \n   - Function complexity analysis \n   - Interaction friction points \n   - User feedback (if available) \n\n3. **Optimization Suggestions** \n   - Function optimization ideas \n   - Process improvement suggestions \n   - User experience enhancements \n\nUse Mermaid diagrams and examples to support analysis, ensuring practical insights."
      }
    }
  },
  "ja": {
    "製品要件ドキュメント（PRD）": {
      "name": "製品要件ドキュメント（PRD）",
      "singlePageAnalysis": {
        "prompt": "このコードファイルを分析し、以下を提供してください：\n1. コア機能と目的（1文で）\n2. 主な機能モジュール\n3. 入出力とインタラクション（簡述）\n4. 主要技術依存関係\n簡潔に、100語以内で。"
      },
      "summaryAnalysis": {
        "prompt": "各ファイルの機能概要に基づき、製品要件ドキュメント（PRD）を作成してください：\n\n1. **製品概要**\n   - 背景と価値\n   - ターゲットユーザー\n   - コア価値\n   - 市場ポジショニング\n\n2. **機能仕様**\n   - コア機能モジュール\n   - 機能アーキテクチャ図（Mermaid）\n   - 詳細機能説明\n   - 機能優先度マトリクス\n\n3. **ユーザーシナリオ**\n   - ユーザーペルソナ\n   - ユーザー旅程マップ\n   - 主要シナリオユースケース\n\n4. **技術アーキテクチャ**\n   - システムアーキテクチャ図（Mermaid）\n   - 業務プロセス図\n   - 技術スタック\n   - 外部依存関係\n\n5. **インターフェース仕様**\n   - 統合計画\n   - データフロー\n   - 主要インターフェース定義\n\n内容は詳細かつ構造化し、Mermaid図で可読性を高めてください。"
      }
    },
    "技術的負債評価レポート": {
      "name": "技術的負債評価レポート",
      "singlePageAnalysis": {
        "prompt": "このコードファイルの技術的負債を分析してください：\n1. コード品質（重複、複雑さ）\n2. パフォーマンス問題（潜在的ボトルネック）\n3. ドキュメント状況（完全性）\n4. ベストプラクティス（遵守状況）\n簡潔に、50語以内で。"
      },
      "summaryAnalysis": {
        "prompt": "コード分析結果に基づき、技術的負債評価レポートを作成してください：\n\n1. **技術的負債概要**\n   - 負債分類統計（円グラフ）\n   - 深刻度分布（棒グラフ）\n   - 影響範囲評価\n   - 技術的負債ヒートマップ\n\n2. **詳細分析**\n   - コード品質指標（複雑さ、重複率等）\n   - パフォーマンスボトルネック分析\n   - アーキテクチャリスク評価\n   - セキュリティリスク調査\n\n3. **優先度評価**\n   - 評価マトリクス（緊急 vs 重要）\n   - ROI分析\n   - 修正コスト見積もり\n   - リスク影響評価\n\n4. **改善計画**\n   - 短期最適化提案\n   - 長期リファクタリング計画\n   - 実施手順\n   - 期待収益\n\n5. **監視指標**\n   - 主要指標定義\n   - 監視計画\n   - アラート閾値\n   - 評価周期\n\nMermaid図で可読性とデータ裏付けを強化し、実用的で実行可能なレポートにしてください。"
      }
    },
    "セキュリティ評価レポート": {
      "name": "セキュリティ評価レポート",
      "singlePageAnalysis": {
        "prompt": "このコードファイルのセキュリティリスクを分析してください：\n1. 一般的な脆弱性（SQLインジェクション、XSS等）\n2. データセキュリティ（機密データ処理）\n3. 権限管理（アクセス制御問題）\n明らかな問題がない場合、「重大なセキュリティリスクは見つかりませんでした」と回答。50語以内で。"
      },
      "summaryAnalysis": {
        "prompt": "セキュリティ分析結果に基づき、セキュリティ評価レポートを作成してください：\n\n1. **セキュリティリスク概要**\n   - リスクレベル分布（高、中、低）\n   - 脆弱性タイプ統計（棒グラフ）\n   - OWASP Top 10との比較\n   - 全体セキュリティスコア\n\n2. **脆弱性詳細**\n   - 脆弱性の説明\n   - 影響範囲\n   - 悪用難易度\n   - 危険度\n\n3. **リスク評価**\n   - CVSSスコアリング\n   - 攻撃ベクター分析\n   - 脅威モデル\n   - リスク露出面\n\n4. **修正計画**\n   - 緊急修正提案\n   - 長期防御戦略\n   - ベストプラクティスガイド\n   - セキュリティ強化計画\n\n5. **セキュリティガバナンス**\n   - 安全開発プロセス\n   - コードレビュー要点\n   - 継続的監視計画\n   - 緊急対応計画\n\n詳細な内容と具体的なセキュリティ提案・対策を提供してください。"
      }
    },
    "APIドキュメント": {
      "name": "APIドキュメント",
      "singlePageAnalysis": {
        "prompt": "このコードファイルを分析し、API情報を抽出してください：\n1. エンドポイントパスとメソッド（GET/POST等）\n2. 機能概要\n3. リクエストパラメータ（名前、タイプ、必須かどうか）\n4. レスポンス形式（フィールド名、タイプ）\n5. エラーコードと意味\nAPIがない場合、「APIエンドポイントは見つかりませんでした」と回答。"
      },
      "summaryAnalysis": {
        "prompt": "抽出されたAPI情報に基づき、APIドキュメントを作成してください：\n\n1. **APIエンドポイントリスト**\n   - パス\n   - メソッド（GET/POST等）\n   - 機能説明\n   - リクエストパラメータ（表：名前、タイプ、必須、デフォルト値）\n   - レスポンスデータ形式（表：フィールド名、タイプ、説明）\n\n2. **リクエスト例**\n   - 各APIにcurlコマンドまたはHTTPリクエスト例を提供\n\n3. **レスポンス例**\n   - 各APIにJSONレスポンス例を提供\n\n4. **エラー処理**\n   - エラーコードリスト（表：コード、意味、対処法）\n\n開発者が理解・利用しやすい明確な構造にしてください。"
      }
    },
    "ユーザー行動分析レポート": {
      "name": "ユーザー行動分析レポート",
      "singlePageAnalysis": {
        "prompt": "このコードファイルを分析し、ユーザー行動に注目してください：\n1. 機能概要\n2. ユーザー操作パス（簡述）\n3. 潜在的課題（1-2点）\n4. 最適化提案（簡要）\n簡潔に、100語以内で。"
      },
      "summaryAnalysis": {
        "prompt": "ユーザー行動分析情報に基づき、ユーザー行動分析レポートを作成してください：\n\n1. **ユーザー行動フロー**\n   - システム内のユーザー行動パスを表示（フローチャート）\n   - 主要機能使用パス\n\n2. **ユーザー課題分析**\n   - 機能の複雑さ分析\n   - インタラクションの不親切な点\n   - ユーザーフィードバック（ある場合）\n\n3. **最適化提案**\n   - 機能最適化案\n   - プロセス改善案\n   - ユーザー体験向上策\n\nMermaid図と具体例で分析を裏付け、実用的なレポートにしてください。"
      }
    }
  }
}
